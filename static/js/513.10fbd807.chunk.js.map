{"version":3,"file":"static/js/513.10fbd807.chunk.js","mappings":"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","sources":["Components/common/NewNextArrow.js","Components/common/NewPrevArrow.js","Pages/Hashtags/MiniSliderPost.js","Pages/Hashtags/MainSliderPost.js","Pages/Hashtags/SliderPost.js"],"sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NewNextArrow = (props) => {\r\n    const { className,  style, onClick } = props\r\n    return (\r\n        <div\r\n            className={`${className} new-slider-btn black-opacity`}\r\n            style={{...style}}\r\n            onClick={onClick}\r\n        >\r\n            <FontAwesomeIcon icon={faAngleRight}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewNextArrow","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NewPrevArrow = (props) => {\r\n    const {className, style, onClick} = props\r\n    return (\r\n        <div\r\n            className={`${className} new-slider-btn black-opacity`}\r\n            style={{...style}}\r\n            onClick={onClick}\r\n        >\r\n            <FontAwesomeIcon icon={faAngleLeft}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPrevArrow","import React, {useState} from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport NewNextArrow from \"../../Components/common/NewNextArrow\";\r\nimport NewPrevArrow from \"../../Components/common/NewPrevArrow\";\r\n\r\nconst MiniSliderPost = ({images}) => {\r\n    const [activeSlide, setActiveSlide] = useState(0)\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        nextArrow: <NewNextArrow/>,\r\n        prevArrow: <NewPrevArrow/>,\r\n        afterChange: current => setActiveSlide(current)\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider-post__mini-slider\">\r\n            <div></div>\r\n            <Slider {...settings} >\r\n                {images.map(img => (\r\n                    <div className=\"slider-post__mini-slide-item\" key={img.id}>\r\n                        <div style={{backgroundImage: `url(${img.media_url})`}}\r\n                             className=\"slider-post__item-body_img\"\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MiniSliderPost","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Slider from \"react-slick\";\r\nimport NewNextArrow from \"../../Components/common/NewNextArrow\";\r\nimport NewPrevArrow from \"../../Components/common/NewPrevArrow\";\r\nimport MiniSliderPost from \"./MiniSliderPost\";\r\nimport Loader from \"../../Components/common/Loader\";\r\nimport {useLazyGetInstagramPostsQuery, useSendCurrentPostIdMutation} from \"../../Utils/redux/services/hashtagsApi\";\r\nimport {setCurrentPostId} from \"../../Utils/redux/modules/instaPostsSlice\";\r\n\r\nconst MainSliderPost = ({isSendId}) => {\r\n    const fbPage = useSelector(state => state.facebook.user.fbPage)\r\n    const [activeSlide, setActiveSlide] = useState(0)\r\n    const [getInstagramPosts, {data: posts, isLoading, error}] = useLazyGetInstagramPostsQuery('Post')\r\n    const [sendCurrentPostId] = useSendCurrentPostIdMutation()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getInstagramPosts()\r\n    }, [fbPage])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return dispatch(setCurrentPostId({id: null}))\r\n        }\r\n        if (isSendId) {\r\n            if (posts?.length && fbPage && !!!error) {\r\n                sendCurrentPostId({id: posts[activeSlide].id})\r\n                dispatch(setCurrentPostId({id: posts[activeSlide].id}))\r\n            }\r\n        }\r\n    }, [activeSlide, posts, fbPage, error])\r\n\r\n    let settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        swipe: false,\r\n        nextArrow: <NewNextArrow/>,\r\n        prevArrow: <NewPrevArrow/>,\r\n        afterChange: current => setActiveSlide(current)\r\n    }\r\n\r\n    if (!fbPage) {\r\n        return <h4 className=\"error-message mt-20 mb-20\">Выполните вход в fb</h4>\r\n    }\r\n\r\n    if (error) {\r\n        return <h4 className=\"error-message\">{error.data.message}</h4>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loader width={50} height={50}/>}\r\n            {(posts && !posts.length) && <h4>Постов нет, добавьте посты</h4>}\r\n            {posts?.length && <>\r\n                <Slider {...settings}>\r\n                    {posts.map(post => (<div className=\"slider-post__item\" key={post.id}>\r\n                        <div className=\"slider-post__item-top\">\r\n                            <div className=\"post-slider__item-top_avatar\">\r\n                                <p>{post.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"slider-post__item-body\">\r\n                            {post.children.data ? <MiniSliderPost images={post.children.data}/> :\r\n                                <div style={{backgroundImage: `url(${post.media_url})`}}\r\n                                     className=\"slider-post__item-body_img\"/>}\r\n                        </div>\r\n                        <div className=\"slider-post__item-bottom flex-column\">\r\n                            <span className=\"post-slider__item-like\">\r\n                                <strong>Нравится: {post.like_count}</strong>\r\n                            </span>\r\n                            <span className=\"post-slider__item-caption \">\r\n                                <strong>{post.username}</strong> {post.caption}\r\n                            </span>\r\n                        </div>\r\n                    </div>))}\r\n                </Slider>\r\n                <div className=\"slider-post__control flex align-center\">\r\n                    <span>\r\n                        Выберите нужный пост\r\n                    </span>\r\n                </div>\r\n            </>}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default MainSliderPost","import MainSliderPost from \"./MainSliderPost\";\r\nimport \"./SliderPost.scss\"\r\n\r\nconst SliderPost = ({isSendId}) => {\r\n  return(\r\n      <>\r\n          <div className=\"slider-post  flex flex-column\">\r\n              <div className=\"slider-post__main \">\r\n                  <MainSliderPost isSendId={isSendId} />\r\n              </div>\r\n          </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default SliderPost"],"names":["props","className","style","onClick","icon","faAngleRight","faAngleLeft","images","useState","setActiveSlide","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","NewNextArrow","prevArrow","NewPrevArrow","afterChange","current","map","img","backgroundImage","media_url","id","isSendId","fbPage","useSelector","state","facebook","user","activeSlide","useLazyGetInstagramPostsQuery","getInstagramPosts","posts","data","isLoading","error","useSendCurrentPostIdMutation","sendCurrentPostId","dispatch","useDispatch","useEffect","setCurrentPostId","length","swipe","message","Loader","width","height","post","username","children","like_count","caption","MainSliderPost"],"sourceRoot":""}